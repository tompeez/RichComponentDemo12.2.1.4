<?xml version="1.0" encoding="iso-8859-1" standalone="yes" ?>
<!-- Copyright (c) 2008, 2014, Oracle and/or its affiliates. 
All rights reserved.-->
<jsp:root xmlns="http://www.w3.org/1999/xhtml"
          xmlns:jsp="http://java.sun.com/JSP/Page" xmlns:f="http://java.sun.com/jsf/core"
          xmlns:af="http://xmlns.oracle.com/adf/faces/rich" version="1.2">
  <jsp:directive.page contentType="text/html;charset=utf-8"/>
  <f:view>
    <af:document title="Basic Calendar Demo" binding="#{templateBindings.documentComponent}"
                 smallIconSource="#{aboutBean.smallIconSource}"
                 largeIconSource="#{aboutBean.largeIconSource}" theme="dark" id="d1">
      <af:pageTemplate id="dmoTpl" viewId="#{templates.componentTemplate}">
        <f:attribute name="tagName" value="calendar"/>
        <f:attribute name="visualDesignName" value=""/>
        <f:attribute name="demoKind" value="component"/>
        <f:facet name="center">
          <af:panelGroupLayout layout="scroll" id="pgl1">
            <f:facet name="separator">
              <af:spacer height="10" id="s1"/>
            </f:facet>
            <af:panelGroupLayout layout="vertical" inlineStyle="margin:0 10px 0 10px"
                                 id="pgl2">
              <af:panelGroupLayout id="pgl3">
                <af:outputText value="The demo on this page shows the built in functionality of the calendar, it does not show an example of what an app developer might do to make do to make the calendar functional, for example notice that clicking an activity does not launch a popup. The calendar fires an event when an activity is clicked, but the app developer must listen for this event and react appropriately. To see an example of how an app developer might wire up the calendar to launch a popup when you click an activity see the "
                               id="ot1"/>
                <af:goLink destination="../calendar.jspx" text="calendar component demo."
                           id="gl1"/>
              </af:panelGroupLayout>
              <af:spacer height="20px" id="s2"/>
              <af:outputText value="This demo also shows how the calendar renders when it is not placed in a parent that stretches its children, in which case the size of the calendar can be controlled by setting the height and width in the inlineStyle attribute."
                             id="ot2"/>
              <af:spacer height="20px" id="s3"/>
              <af:calendar binding="#{editor.component}" id="cal"
                           value="#{calendarBean.calendarModel}"/>
            </af:panelGroupLayout>
            <af:panelGroupLayout layout="vertical" id="pgl4">
              <af:outputText value="See also:" id="ot3"/>
              <af:panelList id="pl1">
                <af:goLink destination="../calendar.jspx" text="calendar"
                           id="gl2"/>
              </af:panelList>
            </af:panelGroupLayout>
          </af:panelGroupLayout>
        </f:facet>
      </af:pageTemplate>
    </af:document>
  </f:view>
</jsp:root>
