<?xml version='1.0' encoding='utf-8'?>
<!-- Copyright (c) 2008, 2013, Oracle and/or its affiliates. 
All rights reserved.-->
<jsp:root xmlns:jsp="http://java.sun.com/JSP/Page" version="2.0" xmlns:f="http://java.sun.com/jsf/core"
          xmlns:af="http://xmlns.oracle.com/adf/faces/rich" xmlns:dvt="http://xmlns.oracle.com/dss/adf/faces">
  <jsp:directive.page contentType="text/html;charset=UTF-8"></jsp:directive.page>
  <f:view>
    <af:document title="Treemap Layout Demo" binding="#{templateBindings.documentComponent}" theme="dark" id="d1">
      <f:facet name="metaContainer">
        <!-- following jsf best practice of wrapping jsp include in a subview naming container -->
        <f:subview id="meta">
          <jsp:include page="/templates/pageTemplateDefs/tagDemoMetaContainer.jsff"/>
        </f:subview>
      </f:facet>
      <af:pageTemplate id="demo" viewId="#{templates.componentTemplate}">
        <f:attribute name="visualDesignName" value=""/>
        <f:attribute name="demoKind" value="feature"/>
        <!-- Remove to enable tag inspector -->
        <f:attribute name="customEditorPresent" value="true"/>
        <!-- Document Title -->
        <f:attribute name="documentTitle" value="Treemap Layout Demo"/>
        <!-- Demo Name -->
        <f:attribute name="tagName" value="Treemap Layout"/>
        <f:facet name="center">
          <af:panelGroupLayout layout="scroll" id="layout0">
            <f:facet name="separator">
              <af:separator id="s1"/>
            </f:facet>
            <!-- START FEATURE DEMO -->
            <af:group>
              <f:verbatim>
                <p>Treemap supports the following layouts:</p>
                <ul>
                  <li>squarified: Makes the nodes as square as possible, allowing for easy comparison of node sizes.  Because this is an unordered layout, it 
                                  does not support sorting and is not ideal for viewing data change animations.</li>
                  <li>sliceandDiceHorizontal: First divides nodes horizontally, then vertically.  Good for data change animation and sorting.</li>
                  <li>sliceAndDiceVertical: First divides nodes vertically, then horizontally.  Good for data change animation and sorting.</li>
                </ul>
              </f:verbatim>
              <af:panelGroupLayout id="pfl1" layout="horizontal"  valign="top">
            
                  <af:selectOneRadio label="Layout" value="#{treemap.layout}" id="sor1" autoSubmit="true">
                    <af:selectItem label="squarified" id="si1"/>
                    <af:selectItem label="sliceAndDiceHorizontal" id="si2"/>
                    <af:selectItem label="sliceAndDiceVertical" id="si3"/>
                  </af:selectOneRadio>
              <af:spacer width="20"/>
                  <af:selectOneRadio label="Sorting" id="sor2" value="#{treemap.sorting}" autoSubmit="true">
                    <af:selectItem label="on" id="si2412"/>
                    <af:selectItem label="off" id="si3429"/>
                  </af:selectOneRadio>
              
              </af:panelGroupLayout>
              <af:spacer height="20"/>
              <dvt:treemap id="t1" inlineStyle="width:700px;height:450px;" value="#{treemap.censusData}" var="row"
                           layout="#{treemap.layout}" sorting="#{treemap.sorting}"
                           animationOnDataChange="auto" partialTriggers="::sor1 ::sor2">
                <dvt:treemapNode id="tn1" value="#{row.size}" label="#{row.text}" shortDesc="#{row.income}"
                                 drilling="replace">
                  <dvt:attributeGroups id="ag1" type="color" value="#{row.income > 50000}"
                                       label="#{row.income > 50000 ? 'Low Income' : 'High Income'}"/>
                </dvt:treemapNode>
              </dvt:treemap>
            </af:group>
            <!-- END FEATURE DEMO -->
          </af:panelGroupLayout>
        </f:facet>
      </af:pageTemplate>
    </af:document>
  </f:view>
</jsp:root>
